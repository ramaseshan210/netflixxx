{"version":3,"sources":["axios.js","requests.js","Banner.js","Row.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOrginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorroMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb7d8c4e.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n\r\n});\r\n\r\n\r\nexport default instance;","const API_KEY = \"5258649fe32effa2a9539d40569a3ab4\";\r\n\r\nconst requests = {\r\n\r\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en=US`,\r\n    fetchNetflixOrginals:`/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en=US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorroMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n }\r\n\r\nexport default requests;","import React, { useEffect, useState } from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n\r\n    const [movie,setMovie] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOrginals)\r\n            setMovie (\r\n                request.data.results[\r\n                   Math.floor(Math.random() * request.data.results.length-1)]\r\n            )\r\n    }\r\n    fetchData();\r\n}, []);\r\n\r\nconsole.log(movie);\r\n\r\n\r\nfunction truncate (str, n) {\r\n    return str?.length > n ? str.substr(0,n-1) + \"...\" : str;\r\n}\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n        style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")` ,\r\n            backgroundPosition: \"center center\" ,\r\n            \r\n        }}   >\r\n           \r\n            <div className=\"banner__contents\">\r\n            <h1 className=\"banner__title\">\r\n                {movie?.title || movie?.name || movie?.original_name} </h1>   \r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner__description\">\r\n                  {truncate(movie?.overview, 150)}\r\n                </h1>\r\n           \r\n            </div>\r\n            <div className=\"banner--fadeBottom\">\r\n                \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import \"./Row.css\"\r\nimport React from 'react'\r\nimport {useState,useEffect} from \"react\";\r\nimport axios from './axios'\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\"\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\n\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n\r\n    const [movies,setMovies] = useState([]);\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n            async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n\r\n\r\n    const opts ={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars: {\r\n            autoplay:1,\r\n        },\r\n    };\r\n\r\n    console.log(movies);  \r\n\r\n\r\n    const handleClick = (movie) =>{\r\n\r\n        if(trailerUrl)\r\n        {\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n            movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n                    const urlParams = new URLSearchParams(new URL(url).search );\r\n                     setTrailerUrl(urlParams.get(\"v\")); \r\n            })\r\n            .catch((error)=>console.log(error));\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n              <img  key={movie.id}\r\n              onClick={()=>handleClick(movie)}\r\n               className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                     alt={movie.name}/> \r\n             ))}  \r\n            </div>\r\n           {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row;\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow  ] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY > 100) {\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        });\r\n        return ()=> {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img \r\n            className=\"nav__logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1198px-Netflix_2015_logo.svg.png\"\r\n            alt=\"Netflix Logo\"/>    \r\n\r\n            <img \r\n            className=\"nav__avatar\"\r\n            src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n            alt=\"Netflix Logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import Banner from './Banner.js';\nimport './App.css';\nimport requests from './requests';\nimport Row from './Row'\nimport Nav from './Nav'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*nav*/}\n     <Nav/>\n    <Banner />\n    <Row title=\"NETFLIX ORGINALS\"  isLargeRow={true} fetchUrl={requests.fetchNetflixOrginals}/>\n    <Row title=\"Trending Now \"         fetchUrl={requests.fetchTrending}/>\n    <Row title=\"Top Rated\"         fetchUrl={requests.fetchTopRated}/>\n    <Row title=\"Action Movies\"         fetchUrl={requests.fetchActionMovies}/>\n    <Row title=\"Comedy Movies\"         fetchUrl={requests.fetchComedyMovies}/>\n    <Row title=\"Horror Movies\"         fetchUrl={requests.fetchHorroMovies}/>\n    <Row title=\"Romance Movies\"         fetchUrl={requests.fetchRomanceMovies}/>\n    <Row title=\"Documentaries\"         fetchUrl={requests.fetchDocumentaries}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}